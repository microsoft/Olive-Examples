name: main
description: "CI workflow for Olive Examples"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
  pull_request:

env:
  PYTHON_VERSION: "3.10"
  TENSORRT_VERSION: "10.5.0.18-1+cuda12.6"
  ONNXRUNTIME_PACKAGE_NAME: "onnxruntime"
  PYTEST_BASETEMP: ${{ github.workspace }}/.pytest_basetemp

  HF_HOME: ${{ github.workspace }}/.cache/huggingface
  HUGGING_FACE_HUB_TOKEN: ${{ secrets.HUGGING_FACE_HUB_TOKEN }}

  WORKSPACE_NAME: ${{ secrets.AZURE_WORKSPACE_NAME }}
  WORKSPACE_SUBSCRIPTION_ID: ${{ secrets.AZURE_WORKSPACE_SUBSCRIPTION_ID }}
  # Don't make the following a secret. Github runner would mask it
  # making the matrix generation logic invalid.
  WORKSPACE_RESOURCE_GROUP: ${{ vars.AZURE_WORKSPACE_RESOURCE_GROUP }}
  MANAGED_IDENTITY_CLIENT_ID: ${{ secrets.AZURE_MANAGED_IDENTITY_CLIENT_ID }}
  EXCLUDE_MANAGED_IDENTITY_CREDENTIAL: ${{ secrets.AZURE_EXCLUDE_MANAGED_IDENTITY_CREDENTIAL }}
  AZURE_KEY_VAULT: ${{ secrets.AZURE_KEY_VAULT }}

  DOCKER_FILEPATH: "./.azure_pipelines/dockerfiles/linux-gpu.dockerfile"
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
  DOCKER_BASE_IMAGE_NAME: ${{ secrets.DOCKER_BASE_IMAGE_NAME }}

  LINUX_CPU_POOL: ${{ secrets.LINUX_CPU_POOL }}
  LINUX_GPU_POOL: "olive-1es-pool-ubuntu2004-gpu-v100-eastus" # ${{ secrets.LINUX_GPU_POOL }}
  WINDOWS_CPU_POOL: ${{ secrets.WINDOWS_CPU_POOL }}

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      cpu-matrix: ${{ steps.gen-cpu-matrix.outputs.cpu_matrix }}
      gpu-matrix: ${{ steps.gen-gpu-matrix.outputs.gpu_matrix }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Scan & generate matrix
      id: gen-cpu-matrix
      run: |
        matrix=$(python .github/scripts/generate_matrix.py . cpu)
        echo "cpu-matrix=$matrix" >> $GITHUB_OUTPUT

    - name: Scan & generate matrix
      id: gen-gpu-matrix
      run: |
        matrix=$(python .github/scripts/generate_matrix.py . gpu)
        echo "gpu-matrix=$matrix" >> $GITHUB_OUTPUT

  run-cpu-examples:
    if: false
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.cpu-matrix) }}
    name: ${{ matrix.name }} | ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Environment
      uses: ./.github/actions/setup
      with:
        shell: ${{ matrix.shell }}
        python_version: ${{ env.PYTHON_VERSION }}
        olive_version: ${{ matrix.olive_version }}
        onnxruntime: ${{ env.ONNXRUNTIME_PACKAGE_NAME }}
        hf_cache_key: ${{ runner.os }}-${{ matrix.name }}-hf-cache
        requirements_file: ${{ matrix.cwd }}/${{ matrix.requirements_file }}

    - name: Run Command
      working-directory: ${{ github.workspace }}/${{ matrix.cwd }}
      run: ${{ matrix.command }}

  run-gpu-examples:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.gpu-matrix) }}
    name: ${{ matrix.name }} | ${{ matrix.runs-on }}
    runs-on: "olive-1es-pool-ubuntu2004-gpu-v100-eastus"
    # ${{ matrix.runs-on }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Environment
      uses: ./.github/actions/setup
      with:
        shell: ${{ matrix.shell }}
        python_version: ${{ env.PYTHON_VERSION }}
        olive_version: ${{ matrix.olive_version }}
        onnxruntime: ${{ env.ONNXRUNTIME_PACKAGE_NAME }}
        hf_cache_key: ${{ runner.os }}-${{ matrix.name }}-hf-cache
        requirements_file: ${{ matrix.cwd }}/${{ matrix.requirements_file }}

    - name: Run Command
      working-directory: ${{ github.workspace }}/${{ matrix.cwd }}
      run: ${{ matrix.command }}